---
- name: Check if arm platform is requested for an unsupported Splunk Release Version
  ansible.builtin.fail:
    msg: "\"Exiting.  Splunk for ARM install via Package is only supported on release 9.0.2 or later\"\n"
  when: splunk_release is version('9.0.2', 'lt', version_type='loose')

- name: Create Splunk group
  ansible.builtin.group:
    name: "{{ splunk_forwarder_group }}"
    gid: "{{ splunk_forwarder_gid }}"
    state: present
  tags: splunk_user

- name: Create Splunk user
  ansible.builtin.user:
    name: "{{ splunk_forwarder_user }}"
    group: "{{ splunk_forwarder_group }}"
    uid: "{{ splunk_forwarder_uid }}"
    state: present
  tags: splunk_user

- name: Add Splunk user to additional groups
  ansible.builtin.user:
    name: "{{ splunk_forwarder_user }}"
    groups: "{{ splunk_forwarder_additional_groups }}"
    append: true
  tags: splunk_user
  when: splunk_forwarder_additional_groups | length > 0

- name: Check if Splunk is installed
  ansible.builtin.stat:
    path: "{{ splunk_home }}/bin/splunk"
  register: splunk_installed

- name: Check Splunk Universal Forwarder Version Installed
  ansible.builtin.shell:
    cmd: |
      set -eo pipefail
      if [ -f {{ splunk_home }}/bin/splunk ]; then
        {{ splunk_home }}/bin/splunk --accept-license --answer-yes -version |tail -1 |cut -d ' ' -f 4
      fi
    removes: "{{ splunk_home }}/ftr"
  register: splunk_version_check
  become: true
  become_user: "{{ splunk_forwarder_user }}"
  changed_when: splunk_version_check.stdout != splunk_release

- name: Install role package dependencies
  ansible.builtin.package:
    name: acl
    state: present

- name: Install Splunk Forwarder Client
  when: splunk_version_check.stdout != splunk_release
  ansible.builtin.include_tasks:
    file: "{{ ansible_os_family }}.yml"

- name: Copy default CA and CA cert into palce
  ansible.builtin.copy:
    src: "{{ splunk_home }}/etc/auth/{{ item }}.default"
    dest: "{{ splunk_home }}/etc/auth/{{ item }}"
    mode: "0664"
    remote_src: true
  tags: config_copy
  loop:
    - cacert.pem
    - ca.pem

- name: Copy default splunkd.xml config into place
  ansible.builtin.copy:
    src: "{{ splunk_home }}/etc/myinstall/splunkd.xml.cfg-default"
    dest: "{{ splunk_home }}/etc/myinstall/splunkd.xml"
    mode: "0644"
    remote_src: true
  tags: config_copy

# - name: Find all directories within $SPLUNK_HOME
#   ansible.builtin.find:
#     path: "{{ splunk_home }}"
#     file_type: any
#     recurse: true
#   register: splunk_contents
#   when: not splunk_installed.stat.exists and splunk_forwarder_user != "splunkfwd"

# - name: Recursively change ownership of $SPLUNK_HOME
#   ansible.builtin.file:
#     path: "{{ item.path }}"
#     owner: "{{ splunk_forwarder_user }}"
#     group: "{{ splunk_forwarder_group }}"
#   loop: "{{ splunk_contents.files }}"
#   when: not splunk_installed.stat.exists and splunk_forwarder_user != "splunkfwd"

- name: Copy user seeds file
  ansible.builtin.template:
    src: user-seed.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
    mode: "0644"
    backup: true
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Create deploymentconf dir
  ansible.builtin.file:
    path: "{{ splunk_home }}/{{ splunk_deploymentconf_dir }}"
    state: directory
    mode: "0775"
    owner: "{{ splunk_forwarder_user }}"
    group: "{{ splunk_forwarder_group }}"
  when: splunk_forwarder_depl_server is defined
  tags: config_copy

- name: Copy deployment client file
  ansible.builtin.template:
    src: deploymentclient.conf.j2
    dest: "{{ splunk_home }}/{{ splunk_deploymentconf_dir }}/deploymentclient.conf"
    mode: "0664"
    backup: true
  when: splunk_forwarder_depl_server is defined
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Copy inputs file
  ansible.builtin.template:
    src: inputs.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/inputs.conf"
    mode: "0664"
    backup: true
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Copy outputs file
  ansible.builtin.template:
    src: outputs.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/outputs.conf"
    mode: "0664"
    backup: true
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Copy server file
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
    mode: "0664"
    backup: true
  when: splunk_forwarder_output_use_tls
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Copy splunk-launch configuration file
  ansible.builtin.template:
    src: splunk-launch.conf.j2
    dest: "{{ splunk_home }}/etc/splunk-launch.conf"
    mode: "0664"
    backup: true
  tags: config_copy
  notify:
    - restart splunkforwarder

# - name: Set logfile permissions
#   ansible.posix.acl:
#     path: "{{ item.path }}"
#     entity: "{{ splunk_forwarder_user }}"
#     state: present
#     etype: user
#     permissions: r
#     recursive: true
#   become: true
#   with_items: "{{ splunk_forwarder_logs }}"

- name: Accept Splunk License
  ansible.builtin.file:
    path: "{{ splunk_home }}/ftr"
    state: absent

- name: Additional commands to allow Splunk user to run
  community.general.sudoers:
    name: splunk-additional-commands
    state: present
    user: "{{ splunk_forwarder_user }}"
    commands: "{{ splunk_forwarder_additional_commands }}"

- name: Install systemd unit file
  ansible.builtin.template:
    src: splunkforwarder.service.j2
    dest: /etc/systemd/system/SplunkForwarder.service
    mode: "0664"
    backup: true
  tags: config_copy
  notify:
    - restart splunkforwarder

- name: Start Splunk Forwarder
  ansible.builtin.service:
    name: SplunkForwarder
    state: started
    enabled: true
  tags: config_copy
